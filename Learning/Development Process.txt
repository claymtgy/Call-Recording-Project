To start off this project, my idea was to completely automate recording call statistics to a spreadsheet to monitor results of marketing.
The idea was, at first, to access Google directly for Google Voice information, and record it directly from there and copy it into a report. This plan was quickly ruined, however, because (at time of writing) there is no API that can connect with Google. At least not that I could find. This resulted in a quick brainstorm, where I found out you can still download datat from Google directly, a service they call Google Takeout. So now the plan has become to parse through this information in a takeout zip, gather it, sort it, and boom. The project is mostly saved. The automation of gathering the data in the first place will probably have to wait until later. I will probably try to automate this using a headless browser and scripts. A few minutes of Googling suggests a program called Puppeteer.
First thing's first, I will learn to parse the data and sort it into a spreadsheet.
I've created different .py files that will unzip the Google Takeout file (needs tweaking) into a directory, and move the calls (missed and placed) into certain folders.
COUNT THE TOTAL CALLS, THEN TRACK THAT. THEN AFTER 1 WEEK HAS BEEN DONE, COUNT THE DIFFERENCE BETWEEN THE 2 REPORTS TO GET WEEKLY TOTAL CALLS

I realized if I can just count the number of files in the directory, there's no need to move them. Hence counting them is added, sorting them is removed.
Created a program that unzips the latest .zip file (not ideal, no filter to make sure it's a takeout file), read unzipped files, save number of placed and missed calls and texts to a .txt file and delete the unzipped files.
Created a tkinter window so I can select a file. Just need to get the file selector working and plugging that into the code written in Call_Recorder.py, and then a dropdown menu to select what area you want to write in. This will then go and add the proper text to the right area .txt or eventually a .csv file.
Got tkinter selecting a file, and then running the call_recorder. Need to implement selecting a branch next. Then writing to .csv file.
Finished a slightly better version. I can now select the file that I want, and then select a branch. This then moves to a directory in documents witht hte name of the branch, unzips the selected file, counts missed, placed, and total calls, writes to a log file, and then cleans up the files unzipped. Still need to write to a CSV File, and since this will be delivered to others, it would help to check if the file had already written the exact same numbers the week prior (in case the same .zip was selected twice on accident)
Deleted extra files that weren't being used, defined frame size for the tkinter root window.